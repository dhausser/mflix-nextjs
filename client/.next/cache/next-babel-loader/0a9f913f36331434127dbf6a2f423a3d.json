{"ast":null,"code":"var _jsxFileName = \"/Users/davy/Developer/mflix-next/pages/movie/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { fetcher } from '..';\n\nvar Movie = function Movie() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSWR = useSWR(\"/movies/id/\".concat(id), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"loading...\");\n  console.log(data);\n  var _data$movie = data.movie,\n      title = _data$movie.title,\n      year = _data$movie.year,\n      runtime = _data$movie.runtime,\n      cast = _data$movie.cast,\n      metacritic = _data$movie.metacritic,\n      poster = _data$movie.poster;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, title)), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, year)), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, runtime)), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, cast[0])), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, metacritic))), __jsx(\"img\", {\n    src: poster,\n    alt: \"movie poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default Movie;","map":{"version":3,"sources":["/Users/davy/Developer/mflix-next/pages/movie/[id].js"],"names":["useRouter","useSWR","fetcher","Movie","router","id","query","data","error","console","log","movie","title","year","runtime","cast","metacritic","poster"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,QAAwB,IAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADkB,MAEVK,EAFU,GAEHD,MAAM,CAACE,KAFJ,CAEVD,EAFU;;AAAA,gBAGMJ,MAAM,sBAAeI,EAAf,GAAqBH,OAArB,CAHZ;AAAA,MAGVK,IAHU,WAGVA,IAHU;AAAA,MAGJC,KAHI,WAGJA,KAHI;;AAKlB,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAPkB,oBASyCA,IAAI,CAACI,KAT9C;AAAA,MASVC,KATU,eASVA,KATU;AAAA,MASHC,IATG,eASHA,IATG;AAAA,MASGC,OATH,eASGA,OATH;AAAA,MASYC,IATZ,eASYA,IATZ;AAAA,MASkBC,UATlB,eASkBA,UATlB;AAAA,MAS8BC,MAT9B,eAS8BA,MAT9B;AAWlB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAJ,CAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,OAAJ,CAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAI,CAAC,CAAD,CAAR,CAAJ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,UAAJ,CAAJ,CALF,CADF,EAQE;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,GAAG,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAvBD;;AAyBA,eAAed,KAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport useSWR from 'swr'\nimport { fetcher } from '..'\n\nconst Movie = () => {\n  const router = useRouter()\n  const { id } = router.query\n  const { data, error } = useSWR(`/movies/id/${id}`, fetcher)\n\n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n  console.log(data)\n\n  const { title, year, runtime, cast, metacritic, poster } = data.movie\n\n  return (\n    <div>\n      <ul>\n        <li><p>{title}</p></li>\n        <li><p>{year}</p></li>\n        <li><p>{runtime}</p></li>\n        <li><p>{cast[0]}</p></li>\n        <li><p>{metacritic}</p></li>\n      </ul>\n      <img src={poster} alt=\"movie poster\"/>\n    </div>\n  )\n}\n\nexport default Movie"]},"metadata":{},"sourceType":"module"}