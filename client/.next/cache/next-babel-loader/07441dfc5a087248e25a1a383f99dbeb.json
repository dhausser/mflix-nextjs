{"ast":null,"code":"var _jsxFileName = \"/Users/davy/Developer/mflix-next/pages/movie/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { fetcher } from '..';\n\nconst Movie = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    data,\n    error\n  } = useSWR(`/movies/id/${id}`, fetcher);\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"loading...\");\n  console.log(data);\n  const {\n    title,\n    year,\n    runtime,\n    cast,\n    metacritic,\n    poster\n  } = data.movie;\n  return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Movie: \", id);\n};\n\nexport default Movie;","map":{"version":3,"sources":["/Users/davy/Developer/mflix-next/pages/movie/[id].js"],"names":["useRouter","useSWR","fetcher","Movie","router","id","query","data","error","console","log","title","year","runtime","cast","metacritic","poster","movie"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,QAAwB,IAAxB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBP,MAAM,CAAE,cAAaI,EAAG,EAAlB,EAAqBH,OAArB,CAA9B;AAEA,MAAIM,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA;AAA1C,MAAqDT,IAAI,CAACU,KAAhE;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWZ,EAAX,CAAP;AACD,CAZD;;AAcA,eAAeF,KAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport useSWR from 'swr'\nimport { fetcher } from '..'\n\nconst Movie = () => {\n  const router = useRouter()\n  const { id } = router.query\n  const { data, error } = useSWR(`/movies/id/${id}`, fetcher)\n\n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n  console.log(data)\n\n  const { title, year, runtime, cast, metacritic, poster } = data.movie\n\n  return <p>Movie: {id}</p>\n}\n\nexport default Movie"]},"metadata":{},"sourceType":"module"}